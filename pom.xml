<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Project Metadata -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.yourname.expensemanager</groupId> <!-- Update this as per your project needs -->
    <artifactId>ExpenseManager</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Expense and Budget Manager</name>
    <description>An expense and budget management project with MySQL and JDBC</description>

    <!-- Properties for versions -->
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <mysql.connector.version>8.0.32</mysql.connector.version> <!-- Use the latest compatible version -->
    </properties>

    <!-- Dependencies for the project -->
    <dependencies>
        <!-- MySQL Connector for database connectivity -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>

        <!-- JDBC (Java Database Connectivity) - This is part of Java SE, so no extra dependency is needed for JDBC itself -->

        <!-- JUnit (for testing) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Add any additional dependencies if needed -->
    </dependencies>

    <!-- Build configuration -->
    <build>
        <plugins>
            <!-- Compiler plugin to specify Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
